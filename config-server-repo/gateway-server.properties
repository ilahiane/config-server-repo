server.port = 9006


eureka.client.serviceUrl.defaultZone=http://localhost:9102/eureka/

eureka.client.enabled=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

eureka.instance.prefer-ip-address=true

# spring.cloud.gateway.discovery.locator.enabled=true
# spring.cloud.gateway.discovery.locator.lower-case-service-id=true

spring.cloud.gateway.routes[0].id=microservice-commandes
spring.cloud.gateway.routes[0].uri=http://localhost:9009
spring.cloud.gateway.routes[0].predicates[0]=Path=/microservice-commandes/api/commandes/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1

# For actuator calls specifically under /microservice-commandes/actuator/...
spring.cloud.gateway.routes[1].id=microservice-commandes-actuator
spring.cloud.gateway.routes[1].uri=http://localhost:9009
spring.cloud.gateway.routes[1].predicates[0]=Path=/microservice-commandes/actuator/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1


# For actuator calls specifically under /microservice-produits/...
spring.cloud.gateway.routes[2].id=microservice-produits
spring.cloud.gateway.routes[2].uri=http://localhost:9001
spring.cloud.gateway.routes[2].predicates[0]=Path=/microservice-produit/Produits/**
spring.cloud.gateway.routes[2].filters[0]=StripPrefix=1


logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.com.netflix.discovery=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.reactor.netty.http.client=DEBUG


# spring.cloud.gateway.httpclient.connect-timeout=5000
# spring.cloud.gateway.httpclient.response-timeout=5000



# Letâ€™s expose all actuator endpoints:
management.endpoints.web.exposure.include=*

# Sometimes needed in older versions or if using certain setups:
spring.cloud.gateway.actuator.enabled=true

management.endpoint.gateway.enabled = true


management.endpoints.web.exposure.include=*

spring.cloud.gateway.cors.allowed-origins=*
spring.cloud.gateway.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.cors.allowed-origins=http://localhost:3000
spring.cloud.gateway.cors.allow-credentials=true